# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

stages:
  - stage: windows_latest
    displayName: 'windows-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'windows-latest'
    jobs:
      - job: RestoreWorkloads
        displayName: 'RestoreWorkloads'
        dependsOn: [  ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: RestoreWorkloads'
            inputs:
              script: './build.cmd RestoreWorkloads --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
      - job: Clean
        displayName: 'Clean'
        dependsOn: [  ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: Clean'
            inputs:
              script: './build.cmd Clean --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
      - job: PackAndroid
        displayName: 'PackAndroid'
        dependsOn: [ Clean, RestoreWorkloads ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: PackAndroid'
            inputs:
              script: './build.cmd PackAndroid --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
      - job: PackWindows
        displayName: 'PackWindows'
        dependsOn: [ Clean, RestoreWorkloads ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: PackWindows'
            inputs:
              script: './build.cmd PackWindows --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
      - job: PackDebian
        displayName: 'PackDebian'
        dependsOn: [ Clean, RestoreWorkloads ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: PackDebian'
            inputs:
              script: './build.cmd PackDebian --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
      - job: Publish
        displayName: 'Publish'
        dependsOn: [ PackDebian, PackWindows, PackAndroid ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: Publish'
            inputs:
              script: './build.cmd Publish --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
      - job: PublishGitHubRelease
        displayName: 'PublishGitHubRelease'
        dependsOn: [ Publish ]
        steps:
          - task: Cache@2
            displayName: 'Cache: nuke-temp'
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: 'Cache: nuget-packages'
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj, **/Directory.Packages.props
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            displayName: 'Run: PublishGitHubRelease'
            inputs:
              script: './build.cmd PublishGitHubRelease --skip'
            env:
              GitHubAuthenticationToken: $(GitHubAuthenticationToken)
              AndroidSigningKeyAlias: $(AndroidSigningKeyAlias)
              AndroidSigningKeyPass: $(AndroidSigningKeyPass)
              AndroidSigningStorePass: $(AndroidSigningStorePass)
              Base64Keystore: $(Base64Keystore)
